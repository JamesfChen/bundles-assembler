import io.gitlab.arturbosch.detekt.Detekt

plugins {
    id 'groovy'
    id 'java'
    id 'org.jetbrains.intellij' version '1.0'
    id "io.gitlab.arturbosch.detekt" version '1.17.1'
    id "org.jetbrains.changelog" version '1.1.2'
}

def properties(String key) {
    return project.findProperty(key).toString()
}

group = properties("pluginGroup")
version = properties("pluginVersion")

// Configure project's dependencies
repositories {
    mavenCentral()
}
dependencies {
    detektPlugins("io.gitlab.arturbosch.detekt:detekt-formatting:1.17.1")
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

// Configure gradle-changelog-plugin plugin.
// Read more: https://github.com/JetBrains/gradle-changelog-plugin
//changelog {
//    version = properties("pluginVersion")
//    groups = emptyList()
//}
detekt {
    config = files("./detekt-config.yml")
    buildUponDefaultConfig = true

    reports {
        html.enabled = false
        xml.enabled = false
        txt.enabled = false
    }
}
//def processReadme() {
//    def lines = new File(projectDir, "README.md").readLines()
//    lines.add(-1, "<!-- Plugin description -->")
//    lines.add("<!-- Plugin description end -->")
//    return  lines
//}
// Configure gradle-intellij-plugin plugin.
// Read more: https://github.com/JetBrains/gradle-intellij-plugin
intellij {
    pluginName.set(properties("pluginName"))
//    version.set(properties("platformVersion"))
    version properties("platformVersion")
    type.set(properties("platformType"))
    downloadSources.set(properties("platformDownloadSources").toBoolean())
    updateSinceUntilBuild.set(true)

    // Plugin Dependencies. Uses `platformPlugins` property from the gradle.properties file.
//    plugins.set(properties("platformPlugins").split(',').map(String::trim).filter(String::isNotEmpty))
    patchPluginXml {
        version properties("pluginVersion")
        sinceBuild = properties("pluginSinceBuild")
        untilBuild = properties("pluginUntilBuild")
//        pluginDescription = processReadme()
//        changeNotes =  (provider { changelog.getLatest().toHTML() })

    }
}


tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
}
tasks.withType(Detekt) {
    jvmTarget = "1.8"
}
//
////    runPluginVerifier {
////        ideVersions.set(properties("pluginVerifierIdeVersions").split(',').map(String::trim).filter(String::isNotEmpty))
////    }
publishPlugin {
    dependsOn("patchChangelog")
    token.set(System.getenv("PUBLISH_TOKEN"))
    // pluginVersion is based on the SemVer (https://semver.org) and supports pre-release labels, like 2.1.7-alpha.3
    // Specify pre-release label to publish the plugin in a custom Release Channel automatically. Read more:
    // https://plugins.jetbrains.com/docs/intellij/deployment.html#specifying-a-release-channel
//    channels.set(listOf(properties("pluginVersion").split('-').getOrElse(1) { "default" }.split('.').first()))
}

